# -*- coding: utf-8 -*-
"""TPphotos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SZ3floMxbbgkiDA1SLISShKW_ZJI_eqn
"""

from google.colab import drive
drive.mount('/content/drive')

import os
import cv2
from PIL import Image, ImageOps

# Chemin vers ton dossier d'images dans Google Drive
image_folder = '/content/drive/My Drive/fichierTPphotos/'

# Lister les fichiers dans le dossier
images = os.listdir(image_folder)

for i in range(0, len(images)) :
  images[i] = image_folder + images[i]

# Commented out IPython magic to ensure Python compatibility.
from math import *
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
#permet l'affichage des images à l'intérieur du notebook Jupyter

img = plt.imread(images[0])
plt.imshow(img)

img.shape
height = img.shape[0]
width = img.shape[1]
print(height,width)

def display(imglist,size):
    cols = len(imglist)
    fig = plt.figure(figsize=(size*cols,size*cols))
    for i in range(0,cols):
        a = fig.add_subplot(1, cols, i+1)
        subfig = plt.imshow(imglist[i], cmap="gray")
        subfig.axes.get_xaxis().set_visible(False)
        subfig.axes.get_yaxis().set_visible(False)

display([img,img],5)

display([cv2.imread(images[0]), cv2.cvtColor(cv2.imread(images[0]), cv2.COLOR_BGR2GRAY)], 2)

def mix(src1, src2, factor) :
  width, height = Image.open(src1).size
  im2 = Image.open(src2)
  im2 = im2.resize((width, height))
  img = Image.blend(Image.open(src1), im2, factor) #Le factor correspond à la visibilité de l'image 1 à l'intérieur de l'image 2 : plus il est élevé, plus on verra l'image 1
  return img

plt.imshow(mix(images[0], images[1], 0.25)) #

def blur(src, halfw) :
  imag = cv2.imread(src)
  imBlur = cv2.blur(imag, (halfw, halfw)) #Utilise la librairie cv2 pour flouter image "imag" en utilisant un filtre moyenneur avec un voisinage carré de demi-largeur halfw
  return imBlur

plt.imshow(blur(images[0], 4)) #Le paramètre images[0] est le chemin du premier fichier (qui est une image), La valeur 4 correspond à la moitié de la taille en largeur de la matrice
